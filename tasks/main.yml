---
# tasks file for strongswan
- name: get Public IP
  ipify_facts:

- name: update repo cache and get state of certs
  include: "{{item}}"
  with_items:
    - repos.yml
    - state.yml

- name: install strongswan
  package: >
    state=present
    name={{item}}
  with_items:
    - strongswan
    - strongswan-plugin-eap-mschapv2
    - moreutils
    - postfix
    - mailutils
    - iptables-persistent

- name: create cert directory
  file: >
    path=/etc/ipsec.d/certs
    state=directory
    mode=0600

- name: generate cert
  shell: ipsec pki --gen --type rsa --size 4096 --outform pem > server-root-key.pem
  args:
    chdir: /etc/ipsec.d/certs/
  when: cert.stat.exists == False

- name: sign ca key
  shell: >
    ipsec pki --self --ca --lifetime 3650 \
    --in server-root-key.pem \
    --type rsa --dn "C=US, O=VPN Server, CN=VPN Server Root CA" \
    --outform pem > server-root-ca.pem
  args:
    chdir: /etc/ipsec.d/certs/
  when: cacert.stat.exists == False

- name: generage vpn private key
  shell: ipsec pki --gen --type rsa --size 4096 --outform pem > vpn-server-key.pem
  args:
    chdir: /etc/ipsec.d/certs/
  when: vpnkey.stat.exists == false

- name: sign vpn cert
  shell: >
    ipsec pki --pub --in vpn-server-key.pem \
    --type rsa | ipsec pki --issue --lifetime 1825 \
    --cacert server-root-ca.pem \
    --cakey server-root-key.pem \
    --dn "C=US, O=VPN Server, CN={{ipify_public_ip}}" \
    --san {{ipify_public_ip}} \
    --flag serverAuth --flag ikeIntermediate \
    --outform pem > vpn-server-cert.pem
  args:
    chdir: /etc/ipsec.d/certs/
  when: signedcert.stat.exists == false

- name: lock down certs
  file: >
    path=/etc/ipsec.d/certs
    group=root
    owner=root
    recurse=true
    mode=0600

- name: add ipsec config
  template: >
    src=etc/ipsec.conf.j2
    dest=/etc/ipsec.conf

- name: add user config
  template: >
    src=etc/ipsec.secrets.j2
    dest=/etc/ipsec.secrets

- name: reload ipsec
  command: ipsec reload

- name: send ip and pub cert to email address
  mail:
    host: localhost
    port: 25
    to: "{{email.address}}"
    subject: VPN INSTALL
    body: A new VPN instance has been launched at "{{ipify_public_ip}}"
    attach: /etc/ipsec.d/certs/server-root-ca.pem
  tags:
    - email

- name: update firewall rules
  include: firewall.yml
  tags:
    - firewall

- name: rebooting
  shell: reboot
  async: 30
  poll: 0

- name: Wait for the server to finish rebooting
  become: no
  local_action: wait_for host= "{{inventory_hostname}}" search_regex=OpenSSH port=22 timeout=300

